type BaseFactory_DestinationVaultRegistered {
  id: ID!
  vaultAddress: String!
  caller: String!
}

type EthFactory_DestinationVaultRegistered {
  id: ID!
  vaultAddress: String!
  caller: String!
}

type EthVault_Transfer{
  id: ID!
  from: String!
  to: String!
  value: BigInt!
}

type EthVault_WithdrawLiquidity{
  id: ID!
  lpToken: String!
  staking: String!
  amount: BigInt!
}

type EthVault_BaseAssetWithdraw{
  id: ID!
  amount: BigInt!
  owner: String!
  to: String!

}

type EthVault_UnderlyingWithdraw{
  id: ID!
  amount: BigInt!
  owner: String!
  to: String!
}

type BaseVault_Transfer{
  id: ID!
  from: String!
  to: String!
  value: BigInt!
}

type BaseVault_WithdrawLiquidity{
  id: ID!
  lpToken: String!
  staking: String!
  amount: BigInt!
}

type BaseVault_BaseAssetWithdraw{
  id: ID!
  amount: BigInt!
  owner: String!
  to: String!

}

type BaseVault_UnderlyingWithdraw{
  id: ID!
  amount: BigInt!
  owner: String!
  to: String!
}